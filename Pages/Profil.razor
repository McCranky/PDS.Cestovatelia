@page "/profil"
@attribute [Authorize]

@inject Data.OracleDbContext Context
@inject Services.AuthService Auth

@if (_userStats != null) {
    <div class="card text-white bg-dark w-50 align-self-center m-3 text-center">
        <div class="card-header">@_user.Name @_user.Surname</div>
        <div class="card-body">
            <h5 class="card-title">@_user.Nickname</h5>
            <hr style="background-color: wheat;" />
            <p class="card-text profilePointer">Total posts: @_userStats.PostsCount</p>
            <p class="card-text profilePointer">Followed by: @_userStats.FollowersCount</p>
            <p class="card-text profilePointer">Following: @_userStats.FollowingCount</p>
        </div>
    </div>
} else {
    <p>Loading...</p>
}

@if (_myPosts != null) {
    @foreach (var post in _myPosts) {
        <div class="card mb-3 align-self-center w-50">
            <img class="card-img-top" src="@post.PictureSource" alt="Card image cap">
            <div class="card-body">
                <h5 class="card-title">@post.Nickname</h5>
                <hr style="background-color: wheat;" />
                <p class="card-subtitle mb-2 text-muted">@post.CreationDate.ToString()</p>
                <p class="card-text">@post.Description</p>
                <div class="card-text">
                    <span class="badge badge-primary">@post.Likes Likes</span>
                    <i class="fas fa-thumbs-up fa-lg" @onclick="@(() => HandleLike(post.PostId))"></i>
                </div>
            </div>
        </div>
    }
}

@code {
    private UserInfo _user;
    private UserStats _userStats;

    private IList<Post> _myPosts;

    protected override async Task OnInitializedAsync()
    {
        _user = await Auth.GetCurrentUser();
        _userStats = await Context.GetUserStats(_user.Id);

        _myPosts = await Context.GetAllUsersPostsAsync(_user.Id, (int)_user.Role, _user.Id);
    }

    private async Task HandleLike(int postId)
    {
    }
}
